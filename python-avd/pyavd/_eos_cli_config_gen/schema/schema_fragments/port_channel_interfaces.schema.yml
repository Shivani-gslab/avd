# Copyright (c) 2023-2024 Arista Networks, Inc.
# Use of this source code is governed by the Apache License 2.0
# that can be found in the LICENSE file.
# yaml-language-server: $schema=../../../../plugins/plugin_utils/schema/avd_meta_schema.json
# Line above is used by RedHat's YAML Schema vscode extension
# Use Ctrl + Space to get suggestions for every field. Autocomplete will pop up after typing 2 letters.
type: dict
keys:
  port_channel_interfaces:
    type: list
    primary_key: name
    convert_types:
      - dict
    items:
      type: dict
      keys:
        name:
          type: str
        description:
          type: str
        logging:
          type: dict
          keys:
            event:
              type: dict
              keys:
                link_status:
                  type: bool
                storm_control_discards:
                  type: bool
                  description: |
                    Discards due to storm-control.
        shutdown:
          type: bool
        l2_mtu:
          type: int
          min: 68
          max: 65535
          convert_types:
            - str
          description: |
            "l2_mtu" should only be defined for platforms supporting the "l2 mtu" CLI.
        l2_mru:
          type: int
          min: 68
          max: 65535
          convert_types:
            - str
          description: |
            "l2_mru" should only be defined for platforms supporting the "l2 mru" CLI.
        vlans:
          type: str
          convert_types:
            - int
          description: |
            List of switchport vlans as string.
            For a trunk port this would be a range like "1-200,300".
            For an access port this would be a single vlan "123".
        snmp_trap_link_change:
          type: bool
        type:
          type: str
          valid_values:
            - routed
            - switched
            - l3dot1q
            - l2dot1q
          description: |
            l3dot1q and l2dot1q are used for sub-interfaces. The parent interface should be defined as routed.
            Interface will not be listed in device documentation, unless "type" is set.
        encapsulation_dot1q_vlan:
          type: int
          description: VLAN tag to configure on sub-interface.
          convert_types:
            - str
        vrf:
          type: str
          description: VRF name.
          convert_types:
            - int
        encapsulation_vlan:
          type: dict
          keys:
            client:
              type: dict
              keys:
                dot1q:
                  type: dict
                  keys:
                    vlan:
                      type: int
                      convert_types:
                        - str
                      description: Client VLAN ID.
                    outer:
                      type: int
                      convert_types:
                        - str
                      description: Client Outer VLAN ID.
                    inner:
                      type: int
                      convert_types:
                        - str
                      description: Client Inner VLAN ID.
                unmatched:
                  type: bool
            network:
              type: dict
              description: Network encapsulation are all optional, and skipped if using client unmatched.
              keys:
                dot1q:
                  type: dict
                  keys:
                    vlan:
                      type: int
                      convert_types:
                        - str
                      description: Network VLAN ID.
                    outer:
                      type: int
                      convert_types:
                        - str
                      description: Network Outer VLAN ID.
                    inner:
                      type: int
                      convert_types:
                        - str
                      description: Network Inner VLAN ID.
                client:
                  type: bool
        vlan_id:
          type: int
          convert_types:
            - str
          min: 1
          max: 4094
        mode:
          type: str
          valid_values:
            - access
            - dot1q-tunnel
            - trunk
            - trunk phone
        native_vlan:
          type: int
          convert_types:
            - str
          description: If setting both native_vlan and native_vlan_tag, native_vlan_tag takes precedence.
        native_vlan_tag:
          type: bool
          default: false
          description: If setting both native_vlan and native_vlan_tag, native_vlan_tag takes precedence.
        link_tracking_groups:
          type: list
          primary_key: name
          items:
            type: dict
            keys:
              name:
                type: str
                description: Group name.
              direction:
                type: str
                valid_values:
                  - upstream
                  - downstream
        phone:
          type: dict
          keys:
            trunk:
              type: str
              valid_values:
                - tagged
                - untagged
            vlan:
              type: int
              convert_types:
                - str
              min: 1
              max: 4094
        l2_protocol:
          type: dict
          keys:
            encapsulation_dot1q_vlan:
              type: int
              convert_types:
                - str
              description: Vlan tag to configure on sub-interface.
            forwarding_profile:
              type: str
              description: L2 protocol forwarding profile.
        mtu:
          type: int
          min: 68
          max: 65535
          convert_types:
            - str
        mlag:
          type: int
          convert_types:
            - str
          description: MLAG ID.
          min: 1
          max: 2000
        trunk_groups:
          type: list
          items:
            type: str
        lacp_fallback_timeout:
          type: int
          description: Timeout in seconds.
          convert_types:
            - str
          default: 90
          min: 0
          max: 300
        lacp_fallback_mode:
          type: str
          valid_values:
            - individual
            - static
        qos:
          type: dict
          keys:
            trust:
              type: str
              valid_values:
                - dscp
                - cos
                - disabled
            dscp:
              type: int
              convert_types:
                - str
              description: DSCP value.
            cos:
              type: int
              convert_types:
                - str
              description: COS value.
        bfd:
          type: dict
          keys:
            echo:
              type: bool
            interval:
              type: int
              description: Interval in milliseconds.
              convert_types:
                - str
            min_rx:
              type: int
              description: Rate in milliseconds.
              convert_types:
                - str
            multiplier:
              type: int
              convert_types:
                - str
              min: 3
              max: 50
            neighbor:
              type: str
              description: IPv4 or IPv6 address. When the Port-channel is a L2 interface, a local L3 BFD address (router_bfd.local_address) has to be defined globally on the switch.
            per_link:
              type: dict
              keys:
                enabled:
                  type: bool
                rfc_7130:
                  type: bool
        service_policy:
          type: dict
          keys:
            pbr:
              type: dict
              keys:
                input:
                  type: str
                  description: Policy Based Routing Policy-map name.
            qos:
              type: dict
              keys:
                input:
                  type: str
                  required: true
                  description: Quality of Service Policy-map name.
        mpls:
          type: dict
          keys:
            ip:
              type: bool
            ldp:
              type: dict
              keys:
                interface:
                  type: bool
                igp_sync:
                  type: bool
        trunk_private_vlan_secondary:
          type: bool
        pvlan_mapping:
          type: str
          description: List of vlans as string.
          convert_types:
            - int
        vlan_translations:
          type: list
          items:
            type: dict
            keys:
              from:
                type: str
                convert_types:
                  - int
                description: List of vlans as string (only one vlan if direction is "both").
              to:
                type: int
                convert_types:
                  - str
                description: VLAN ID.
              direction:
                type: str
                valid_values:
                  - in
                  - out
                  - both
                default: both
        shape:
          type: dict
          keys:
            rate:
              type: str
              description: |
                Rate in kbps, pps or percent.
                Supported options are platform dependent.
                Examples:
                - "5000 kbps"
                - "1000 pps"
                - "20 percent"
        storm_control:
          type: dict
          keys:
            all:
              type: dict
              keys:
                level:
                  type: str
                  convert_types:
                    - int
                    - float
                  description: Configure maximum storm-control level.
                unit:
                  type: str
                  default: percent
                  valid_values:
                    - percent
                    - pps
                  description: Optional field and is hardware dependent.
            broadcast:
              type: dict
              keys:
                level:
                  type: str
                  convert_types:
                    - int
                    - float
                  description: Configure maximum storm-control level.
                unit:
                  type: str
                  default: percent
                  valid_values:
                    - percent
                    - pps
                  description: Optional field and is hardware dependent.
            multicast:
              type: dict
              keys:
                level:
                  type: str
                  convert_types:
                    - int
                    - float
                  description: Configure maximum storm-control level.
                unit:
                  type: str
                  default: percent
                  valid_values:
                    - percent
                    - pps
                  description: Optional field and is hardware dependent.
            unknown_unicast:
              type: dict
              keys:
                level:
                  type: str
                  convert_types:
                    - int
                    - float
                  description: Configure maximum storm-control level.
                unit:
                  type: str
                  default: percent
                  valid_values:
                    - percent
                    - pps
                  description: Optional field and is hardware dependent.
        ip_proxy_arp:
          type: bool
        isis_enable:
          type: str
          description: ISIS instance.
        isis_bfd:
          type: bool
          description: Enable BFD for ISIS.
        isis_passive:
          type: bool
        isis_metric:
          type: int
          convert_types:
            - str
        isis_network_point_to_point:
          type: bool
        isis_circuit_type:
          type: str
          valid_values:
            - level-1-2
            - level-1
            - level-2
        isis_hello_padding:
          type: bool
        isis_authentication_mode:
          type: str
          valid_values:
            - text
            - md5
        isis_authentication_key:
          type: str
          description: Type-7 encrypted password.
        traffic_policy:
          type: dict
          keys:
            input:
              type: str
              description: Ingress traffic policy.
            output:
              type: str
              description: Egress traffic policy.
        evpn_ethernet_segment:
          type: dict
          keys:
            identifier:
              type: str
              description: EVPN Ethernet Segment Identifier (Type 1 format).
            redundancy:
              type: str
              valid_values:
                - all-active
                - single-active
            designated_forwarder_election:
              type: dict
              keys:
                algorithm:
                  type: str
                  valid_values:
                    - modulus
                    - preference
                preference_value:
                  type: int
                  min: 0
                  max: 65535
                  convert_types:
                    - str
                  description: Preference_value is only used when "algorithm" is "preference".
                dont_preempt:
                  type: bool
                  description: Dont_preempt is only used when "algorithm" is "preference".
                  default: false
                hold_time:
                  type: int
                  convert_types:
                    - str
                subsequent_hold_time:
                  type: int
                  convert_types:
                    - str
                candidate_reachability_required:
                  type: bool
            mpls:
              type: dict
              keys:
                shared_index:
                  type: int
                  convert_types:
                    - str
                  min: 1
                  max: 1024
                tunnel_flood_filter_time:
                  type: int
                  convert_types:
                    - str
            route_target:
              type: str
              description: EVPN Route Target for ESI with format xx:xx:xx:xx:xx:xx.
        esi:
          type: str
          description: |
            EVPN Ethernet Segment Identifier (Type 1 format).
            If both "esi" and "evpn_ethernet_segment.identifier" are defined, the new variable takes precedence.
          deprecation:
            warning: true
            new_key: evpn_ethernet_segment.identifier
            remove_in_version: "5.0.0"
        rt:
          type: str
          description: |
            EVPN Route Target for ESI with format xx:xx:xx:xx:xx:xx.
            If both "rt" and "evpn_ethernet_segment.route_target" are defined, the new variable takes precedence.
          deprecation:
            warning: true
            new_key: evpn_ethernet_segment.route_target
            remove_in_version: "5.0.0"
        lacp_id:
          type: str
          description: LACP ID with format xxxx.xxxx.xxxx.
        spanning_tree_bpdufilter:
          type: str
          convert_types:
            - bool
          valid_values: ["enabled", "disabled", "True", "False", "true", "false"]
        spanning_tree_bpduguard:
          type: str
          convert_types:
            - bool
          valid_values: ["enabled", "disabled", "True", "False", "true", "false"]
        spanning_tree_guard:
          type: str
          valid_values:
            - loop
            - root
            - disabled
        spanning_tree_portfast:
          type: str
          valid_values:
            - edge
            - network
        vmtracer:
          type: bool
        ptp:
          type: dict
          keys:
            enable:
              type: bool
            announce:
              type: dict
              keys:
                interval:
                  type: int
                  convert_types:
                    - str
                timeout:
                  type: int
                  convert_types:
                    - str
            delay_req:
              type: int
              convert_types:
                - str
            delay_mechanism:
              type: str
              valid_values:
                - e2e
                - p2p
            profile:
              type: dict
              keys:
                g8275_1:
                  type: dict
                  keys:
                    destination_mac_address:
                      type: str
                      valid_values:
                        - forwardable
                        - non-forwardable
            sync_message:
              type: dict
              keys:
                interval:
                  type: int
                  convert_types:
                    - str
            role:
              type: str
              valid_values:
                - master
                - dynamic
            vlan:
              type: str
              convert_types:
                - int
              description: VLAN can be 'all' or list of vlans as string.
            transport:
              type: str
              valid_values:
                - ipv4
                - ipv6
                - layer2
            mpass:
              type: bool
              description: |-
                When MPASS is enabled on an MLAG port-channel, MLAG peers coordinate to function as a single PTP logical device.
                Arista PTP enabled devices always place PTP messages on the same physical link within the port-channel.
                Hence, MPASS is needed only on MLAG port-channels connected to non-Arista devices.
        ip_address:
          type: str
          description: IPv4 address/mask.
        ip_verify_unicast_source_reachable_via:
          type: str
          valid_values:
            - any
            - rx
        ip_nat:
          type: dict
          $ref: "eos_cli_config_gen#/$defs/interface_ip_nat"
        ipv6_enable:
          type: bool
        ipv6_address:
          type: str
          description: IPv6 address/mask.
        ipv6_address_link_local:
          type: str
          description: Link local IPv6 address/mask.
        ipv6_nd_ra_disabled:
          type: bool
        ipv6_nd_managed_config_flag:
          type: bool
        ipv6_nd_prefixes:
          type: list
          primary_key: ipv6_prefix
          convert_types:
            - dict
          items:
            type: dict
            keys:
              ipv6_prefix:
                type: str
              valid_lifetime:
                type: str
                convert_types:
                  - int
                description: Infinite or lifetime in seconds.
              preferred_lifetime:
                type: str
                convert_types:
                  - int
                description: Infinite or lifetime in seconds.
              no_autoconfig_flag:
                type: bool
        access_group_in:
          type: str
          description: Access list name.
        access_group_out:
          type: str
          description: Access list name.
        ipv6_access_group_in:
          type: str
          description: IPv6 access list name.
        ipv6_access_group_out:
          type: str
          description: IPv6 access list name.
        mac_access_group_in:
          type: str
          description: MAC access list name.
        mac_access_group_out:
          type: str
          description: MAC access list name.
        pim:
          type: dict
          keys:
            ipv4:
              type: dict
              keys:
                border_router:
                  type: bool
                  description: Configure PIM border router. EOS default is false.
                dr_priority:
                  type: int
                  convert_types:
                    - str
                  min: 0
                  max: 429467295
                sparse_mode:
                  type: bool
                bfd:
                  type: bool
                  description: Set the default for whether Bidirectional Forwarding Detection is enabled for PIM.
                bidirectional:
                  type: bool
                hello:
                  type: dict
                  keys:
                    count:
                      type: str
                      convert_types:
                        - int
                        - float
                      description: Number of missed hellos after which the neighbor expires. Range <1.5-65535>.
                    interval:
                      type: int
                      convert_types:
                        - str
                      min: 1
                      max: 65535
                      description: PIM hello interval in seconds.
        service_profile:
          type: str
          description: QOS profile.
        ospf_network_point_to_point:
          type: bool
        ospf_area:
          type: str
          convert_types:
            - int
        ospf_cost:
          type: int
          convert_types:
            - str
        ospf_authentication:
          type: str
          valid_values:
            - none
            - simple
            - message-digest
        ospf_authentication_key:
          type: str
          description: Encrypted password.
        ospf_message_digest_keys:
          type: list
          primary_key: id
          convert_types:
            - dict
          items:
            type: dict
            keys:
              id:
                type: int
                convert_types:
                  - str
              hash_algorithm:
                type: str
                valid_values:
                  - md5
                  - sha1
                  - sha256
                  - sha384
                  - sha512
              key:
                type: str
                description: Encrypted password.
        flow_tracker:
          type: dict
          keys:
            sampled:
              type: str
              description: Sampled flow tracker name.
            hardware:
              type: str
              description: Hardware flow tracker name.
        bgp:
          type: dict
          keys:
            session_tracker:
              type: str
              description: Name of session tracker.
        ip_igmp_host_proxy:
          type: dict
          keys:
            enabled:
              type: bool
            groups:
              type: list
              primary_key: group
              items:
                type: dict
                keys:
                  group:
                    type: str
                    description: Multicast Address.
                  exclude:
                    type: list
                    primary_key: source
                    description: The same source must not be present both in `exclude` and `include` list.
                    items:
                      type: dict
                      keys:
                        source:
                          type: str
                  include:
                    type: list
                    primary_key: source
                    description: The same source must not be present both in `exclude` and `include` list.
                    items:
                      type: dict
                      keys:
                        source:
                          type: str
            report_interval:
              type: int
              convert_types:
                - str
              min: 1
              max: 31744
              description: Time interval between unsolicited reports.
            access_lists:
              type: list
              primary_key: name
              description: Non-standard Access List name.
              items:
                type: dict
                keys:
                  name:
                    type: str
            version:
              type: int
              convert_types:
                - str
              min: 1
              max: 3
              description: IGMP version on IGMP host-proxy interface.
        peer:
          type: str
          description: Key only used for documentation or validation purposes.
        peer_interface:
          type: str
          description: Key only used for documentation or validation purposes.
        peer_type:
          type: str
          description: Key only used for documentation or validation purposes.
        sflow:
          type: dict
          keys:
            enable:
              type: bool
            egress:
              type: dict
              keys:
                enable:
                  type: bool
                unmodified_enable:
                  type: bool
        switchport:
          type: dict
          keys:
            enabled:
              type: bool
              description: |-
                Warning: This should not be combined with `port_channel_interfaces[].type = routed`.
            port_security:
              type: dict
              keys:
                enabled:
                  type: bool
                mac_address_maximum:
                  type: dict
                  description: Maximum number of MAC addresses allowed on the interface.
                  keys:
                    disabled:
                      type: bool
                      description: Disable port level check for port security (only in violation 'shutdown' mode).
                    limit:
                      type: int
                      convert_types:
                        - str
                      min: 1
                      max: 1000
                      description: MAC address limit.
                violation:
                  type: dict
                  description: Configure violation mode (shutdown or protect), EOS default is 'shutdown'.
                  keys:
                    mode:
                      type: str
                      valid_values:
                        - shutdown
                        - protect
                      description: Configure port security mode.
                    protect_log:
                      type: bool
                      description: Log new addresses seen after limit is reached in protect mode.
                vlan_default_mac_address_maximum:
                  type: int
                  convert_types:
                    - str
                  min: 0
                  max: 1000
                  description: Default maximum MAC addresses for all VLANs on this interface.
                vlans:
                  type: list
                  primary_key: range
                  items:
                    type: dict
                    keys:
                      range:
                        type: str
                        convert_types:
                          - int
                        description: |
                          VLAN ID or range(s) of VLAN IDs, <1-4094>.
                          Example:
                            - 3
                            - 1,3
                            - 1-10
                      mac_address_maximum:
                        type: int
                        convert_types:
                          - str
            trunk:
              type: dict
              keys:
                allowed_vlan:
                  type: str
                  convert_types:
                    - int
                  description: |-
                    VLAN ID or range(s) of VLAN IDs (1-4094).
                    Warning: This should not be combined with `port_channel_interfaces.mode = trunk`.
                native_vlan:
                  type: int
                  convert_types:
                    - "str"
                  description: |-
                    Set native VLAN when interface is in trunking mode.
                    Warning: This should not be combined with `port_channel_interfaces[].native_vlan`.
                  min: 1
                  max: 4094
                native_vlan_tag:
                  type: bool
                  description: |-
                    If setting both native_vlan and native_vlan_tag, native_vlan_tag takes precedence.
                    Warning: This should not be combined with `port_channel_interfaces[].native_vlan_tag`.
                private_vlan_secondary:
                  type: bool
                  description: |-
                    Enable secondary VLAN mapping for a private vlan.
                    Warning: This should not be combined with `port_channel_interfaces[].trunk_private_vlan_secondary`.
                groups:
                  type: list
                  items:
                    type: str
                    description: |-
                      Trunk group name.
                      Warning: This should not be combined with `port_channel_interfaces[].trunk_groups`.
            dot1q:
              type: dict
              keys:
                ethertype:
                  type: int
                  convert_types:
                    - str
                  min: 1536
                  max: 65535
                  description: Ethertype/TPID (Tag Protocol IDentifier) for VLAN tagged frames.
                vlan_tag:
                  type: str
                  valid_values:
                    - disallowed
                    - required
            source_interface:
              type: str
              description: |-
                tx: Allow bridged packets to go out of the source interface.
                tx multicast: Allow multicast packets only to go out of the source interface.
              valid_values:
                - tx
                - tx multicast
            access_vlan:
              type: int
              convert_types:
                - "str"
              min: 1
              max: 4094
              description: |-
                Set VLAN when interface is in access mode.
                Warning: This should not be combined with `port_channel_interfaces[].mode = access/dot1q-tunnel`.
            phone:
              type: dict
              keys:
                vlan:
                  type: int
                  min: 1
                  max: 4094
                  convert_types:
                    - str
                  description: |-
                    Warning: This should not be combined with `port_channel_interfaces[].phone.vlan`.
                trunk:
                  type: str
                  description: |-
                    Warning: This should not be combined with `port_channel_interfaces[].phone.trunk`
                  valid_values: ["tagged", "tagged phone", "untagged", "untagged phone"]
            mode:
              type: str
              valid_values: ["access", "dot1q-tunnel", "trunk", "trunk phone"]
              description: |-
                Warning: This should not be combined with `port_channel_interfaces[].mode`
            pvlan_mapping:
              type: str
              convert_types:
                - int
              description: |-
                Secondary VLAN IDs of the private VLAN mapping.
                Warning: This should not be combined with `port_channel_interfaces[].pvlan_mapping`.
            vlan_translations:
              description: |-
                Warning: This should not be combined with `port_channel_interfaces[].vlan_translations`.
              type: dict
              keys:
                required:
                  type: bool
                  description: Drop the ingress packets that do not match any VLAN mapping.
                direction_in:
                  type: list
                  description: Map ingress packets only.
                  items:
                    type: dict
                    keys:
                      from:
                        type: int
                        min: 1
                        max: 4094
                        convert_types:
                          - str
                        description: VLAN ID or range of VLAN IDs to map from.
                      to:
                        type: int
                        min: 1
                        max: 4094
                        convert_types:
                          - str
                        description: VLAN ID to map to.
                      dot1q_tunnel:
                        type: bool
                      inner_vlan_from:
                        type: int
                        min: 1
                        max: 4094
                        convert_types:
                          - str
                        description: Inner VLAN ID to map from.
                direction_out:
                  type: list
                  description: Map egress packets only.
                  items:
                    type: dict
                    keys:
                      from:
                        type: int
                        min: 1
                        max: 4094
                        convert_types:
                          - str
                        description: VLAN ID or range of VLAN IDs to map from.
                        required: true
                      to:
                        type: int
                        min: 1
                        max: 4094
                        convert_types:
                          - str
                        description: VLAN ID to map to.
                      dot1q_tunnel:
                        type: dict
                        keys:
                          all:
                            type: bool
                          to:
                            type: int
                            min: 1
                            max: 4094
                            convert_types:
                              - str
                            description: VLAN ID or range(s) of VLAN IDs to map to.
                      inner_vlan_to:
                        type: int
                        min: 1
                        max: 4094
                        convert_types:
                          - str
                        description: Inner VLAN ID to map to.
                direction_both:
                  type: list
                  description: Map both egress and ingress packets.
                  items:
                    type: dict
                    keys:
                      from:
                        type: int
                        min: 1
                        max: 4094
                        convert_types:
                          - str
                        description: VLAN ID or range of VLAN IDs to map from.
                        required: true
                      to:
                        type: int
                        min: 1
                        max: 4094
                        convert_types:
                          - str
                        description: VLAN ID to map to.
                        required: true
                      dot1q_tunnel:
                        type: bool
                      inner_vlan_from:
                        type: int
                        min: 1
                        max: 4094
                        convert_types:
                          - str
                        description: Inner VLAN ID to map from.
                      network:
                        type: bool
                        description: |-
                          Enable use of network-side VLAN ID.
                          This setting can be enabled only when inner_vlan_from is defined.
            vlan_forwarding_accept_all:
              type: bool
            backup_link:
              type: dict
              keys:
                interface:
                  type: str
                  required: true
                  description: Backup interface. Example - Ethernet4, Vlan10 etc.
                prefer_vlan:
                  type: str
                  convert_types:
                    - int
                  description: VLANs to carry on the backup interface (1-4094).
            backup:
              type: dict
              description: The `backup_link` is required for this setting.
              keys:
                dest_macaddr:
                  type: str
                  pattern: "^([0-9a-f]{2}:){5}[0-9a-f]{2}$"
                  description: |-
                    Destination MAC address for MAC move updates.
                    The mac address should be multicast or broadcast.
                    Example:  01:00:00:00:00:00
                initial_mac_move_delay:
                  type: int
                  convert_types:
                    - str
                  description: Initial MAC move delay in milliseconds.
                  min: 0
                  max: 65535
                mac_move_burst:
                  type: int
                  convert_types:
                    - str
                  description: Size of MAC move bursts in milliseconds.
                  min: 0
                  max: 65535
                mac_move_burst_interval:
                  type: int
                  convert_types:
                    - str
                  description: MAC move burst interval in milliseconds.
                  min: 0
                  max: 65535
                preemption_delay:
                  type: int
                  convert_types:
                    - str
                  description: Preemption delay in milliseconds.
                  min: 0
                  max: 65535
        validate_state:
          type: bool
          description: Set to false to disable interface validation by the `eos_validate_state` role.
        eos_cli:
          type: str
          description: Multiline EOS CLI rendered directly on the port-channel interface in the final EOS configuration.
